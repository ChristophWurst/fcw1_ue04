%{

  #include "MiniCpp.tab.h" /*generated by bison, defines NUMBER ...     */

%}

%s COMMENT

%%

<COMMENT>{
	"*/" BEGIN(INITIAL);
	[^*\n]+;
	"*"[^/];
	\n;
}

"/*"                     BEGIN(COMMENT);
[ \t\n]+   { ; }          /*ignore white space: blanks and tabs       */
"/""/"[^\n]*	{ ; }	/* skip line comments */

[0-9]+   { yylval.i = atoi(yytext); return NUMBER; }

const	{ return CONST; }
false	{ return FALSE; }
true	{ return TRUE; }
void	{ return VOID; }
bool	{ return BOOL; }
int		{ return INT; }
"++"	{ return PLUSPLUS; }
"--"	{ return MINUSMINUS; }
if		{ return IF; }
else	{ return ELSE; }
while	{ return WHILE; }
break	{ return BREAK; }
cin		{ return CIN; }
cout	{ return COUT; }
endl	{ return ENDL; }
delete	{ return DELETE; }
new		{ return NEW; }
return	{ return RETURN; }

[a-zA-Z][_a-zA-Z0-9]* { yylval.string = strdup(yytext); return IDENT; }
L?\"(\\.|[^\\"])*\"	{return STRING; }
"<<"		{ return LEFTSHIFT; }
">>"		{ return RIGHTSHIFT; }
"||"		{ return LOGICOR; }
"&&"		{ return LOGICAND; }
"=="		{ return CMPEQ; }
"!="		{ return CMPNEQ; }
"<="		{ return CMPLE; }
">="		{ return CMPGE; }

.			{ return yytext[0]; } /*return all other chars 
                                 as tokens to parser: '+', ...      */

%%

int yywrap() {
  return 1; /*on end of input: no further files to scan             */
} /*yywrap*/

/* End of Calc.l
====================================================================*/
